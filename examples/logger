#!/usr/bin/perl

(our $ME = $0) =~ s|^.*/||;

use strict;
use warnings;

use Device::LaCrosse::WS23xx;
use Time::Piece;

###############################################################################
# BEGIN user-customizable section

# Path to serial device.
my $serial = '/dev/lacrosse';

# The fields we want, in the format we want.
my $want = <<'END_WANT';
Indoor_Temperature       F      %4.1f
Indoor_Humidity                 %2d%%
Outdoor_Temperature      F      %5.1f
Outdoor_Humidity                %2d%%
Relative_Pressure        inHg   %5.2f
Tendency                        %-7s
Wind_Direction                  %03d @
Wind_Speed               kt     %2.0f
Rain_1h                         %4.1f
Rain_24h                        %4.1f
Rain_Total                      %4.1f
END_WANT

# END   user-customizable section
###############################################################################

my $ws = Device::LaCrosse::WS23xx->new( $serial )
    or die "$ME: Cannot communicate with $serial: $!\n";


my $now = localtime;

my $logline = sprintf("%d-%02d-%02d %02d:%02d:%02d",
		      $now->year, $now->mon, $now->mday,
		      $now->hour, $now->min, $now->sec);

for my $line (split "\n", $want) {
    #           1   1   23   3   2 4   4
    $line =~ m!^(\S+)\s+((\S+)\s+)?(%.*)$!
	or die "$ME: Internal error: cannot grok formattine line '$line'";
    my @field = ($1);
    push @field, $3	if defined $2;
    my $format = $4;

    my $value = $ws->get(@field);
    $logline .= " " . sprintf($format, $value);
}


print $logline, "\n";

#my $outfile = outfile($now);









sub outfile {
    my $t = shift;			# in: Time::Piece object

    my $dir = sprintf("/var/www/wx/data/%d/%02d", $t->year, $t->mon);

    # mkdir
    return sprintf("%s/%02d", $dir, $t->mday);
}
